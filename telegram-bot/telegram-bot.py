import telebot
import requests
from bs4 import BeautifulSoup
import random
from telebot import types
from neiron import send_text_neiron
from neiron import send_design_neiron
from neiron import send_video_neiron
from neiron import send_content_neiron
from neiron import send_productivity_neiron
from neiron import send_business_neiron
from neiron import send_presentations_neiron
from neiron import send_research_neiron

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–æ–∫–µ–Ω–∞ –±–æ—Ç–∞
bot = telebot.TeleBot('6292020588:AAGmz8T0z6bL3H0idUVKQEtRSJ8hYLZ_VYo')


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ –Ω–æ–≤–æ—Å—Ç–µ–π
def parse_news_politic():
    url = 'https://ria.ru/politics/'
    response = requests.get(url)
    soup = BeautifulSoup(response.text, 'html.parser')
    news_list = soup.find_all('div', class_="list-item__content")[:5]
    news = ''
    for item in news_list:
        title = item.find('a', class_="list-item__title color-font-hover-only").text
        link = item.find('a', class_="list-item__title color-font-hover-only").get('href')
        news += f'<a href="{link}">{title}</a>\n\n'
    news = news.split("\n\n")
    return news[random.randint(0, 5)]


def parse_news_mir():
    url = 'https://ria.ru/world/'
    response = requests.get(url)
    soup = BeautifulSoup(response.text, 'html.parser')
    news_list = soup.find_all('div', class_="list-item__content")[:5]
    news = ''
    for item in news_list:
        title = item.find('a', class_="list-item__title color-font-hover-only").text
        link = item.find('a', class_="list-item__title color-font-hover-only").get('href')
        news += f'<a href="{link}">{title}</a>\n\n'
    news = news.split("\n\n")
    return news[random.randint(0, 5)]


def parse_news_economy():
    url = 'https://ria.ru/economy/'
    response = requests.get(url)
    soup = BeautifulSoup(response.text, 'html.parser')
    news_list = soup.find_all('div', class_="list-item__content")[:5]
    news = ''
    for item in news_list:
        title = item.find('a', class_="list-item__title color-font-hover-only").text
        link = item.find('a', class_="list-item__title color-font-hover-only").get('href')
        news += f'<a href="{link}">{title}</a>\n\n'
    news = news.split("\n\n")
    return news[random.randint(0, 5)]


def parse_news_society():
    url = 'https://ria.ru/society/'
    response = requests.get(url)
    soup = BeautifulSoup(response.text, 'html.parser')
    news_list = soup.find_all('div', class_="list-item__content")[:5]
    news = ''
    for item in news_list:
        title = item.find('a', class_="list-item__title color-font-hover-only").text
        link = item.find('a', class_="list-item__title color-font-hover-only").get('href')
        news += f'<a href="{link}">{title}</a>\n\n'
    news = news.split("\n\n")
    return news[random.randint(0, 5)]


def parse_news_science():
    url = 'https://ria.ru/science/'
    response = requests.get(url)
    soup = BeautifulSoup(response.text, 'html.parser')
    news_list = soup.find_all('div', class_="list-item__content")[:5]
    news = ''
    for item in news_list:
        title = item.find('a', class_="list-item__title color-font-hover-only").text
        link = item.find('a', class_="list-item__title color-font-hover-only").get('href')
        news += f'<a href="{link}">{title}</a>\n\n'
    news = news.split("\n\n")
    return news[random.randint(0, 5)]


def parse_news_culture():
    url = 'https://ria.ru/culture/'
    response = requests.get(url)
    soup = BeautifulSoup(response.text, 'html.parser')
    news_list = soup.find_all('div', class_="list-item__content")[:5]
    news = ''
    for item in news_list:
        title = item.find('a', class_="list-item__title color-font-hover-only").text
        link = item.find('a', class_="list-item__title color-font-hover-only").get('href')
        news += f'<a href="{link}">{title}</a>\n\n'
    news = news.split("\n\n")
    return news[random.randint(0, 5)]


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@bot.message_handler(commands=['start'])
def send_welcome(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton("–ü–æ–ª–∏—Ç–∏–∫–∞")
    btn2 = types.KeyboardButton("–≠–∫–æ–Ω–æ–º–∏–∫–∞")
    btn3 = types.KeyboardButton("–ù–∞—É–∫–∞")
    btn5 = types.KeyboardButton("–ö—É–ª—å—Ç—É—Ä–∞")
    btn6 = types.KeyboardButton("–ú–∏—Ä–æ–≤—ã–µ")
    btn7 = types.KeyboardButton("–û–±—â–µ—Å—Ç–≤–æ")
    btn8 = types.KeyboardButton("‚≠ê–ü–æ–ª–µ–∑–Ω–æ–µ")
    markup.add(btn1, btn2, btn3, btn5, btn6, btn7, btn8)
    bot.reply_to(message,
                 f'–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}!\n'
                 f'–Ø —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –Ω–æ–≤–æ—Å—Ç–∏.\n'
                 f'–¢–∞–∫–∂–µ —è –º–æ–≥—É —Å–∫–∏–Ω—É—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ –Ω–µ–π—Ä–æ—Å–µ—Ç–∏.\n'
                 f'–û–Ω–∏ –º–æ–≥—É—Ç —Ä–µ—à–∏—Ç—å –º–Ω–æ–∂–µ—Å—Ç–≤–æ –∑–∞–¥–∞—á, —Ç–∞–∫–∏–µ –∫–∞–∫:\n'
                 f'1.–°–æ–∑–¥–∞—Ç—å –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—é.\n'
                 f'2.–ü–æ–º–æ—á—å —Ç–µ–±–µ —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –±–∏–∑–Ω–µ—Å—Å –∏ –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—å —Ç–≤–æ–π —Å—Ç–∞—Ä—Ç–∞–ø.\n'
                 f'3.–ù–∞–π—Ç–∏ —Ç–µ–±–µ –Ω—É–∂–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é.\n'
                 f'–ò –¥—Ä—É–≥–∏–µ.\n'
                 f'–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –Ω–æ–≤–æ—Å—Ç–µ–π, –∫–æ—Ç–æ—Ä—ã–µ —Ö–æ—Ç–∏—Ç–µ —É–≤–∏–¥–µ—Ç—å.\n'
                 f'–ò–ª–∏ –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –ü–æ–ª–µ–∑–Ω–æ–µ, –≥–¥–µ —Ç—ã —Å–º–æ–∂–µ—à—å –Ω–∞–π—Ç–∏ —É–º–Ω—ã–µ –Ω–µ–π—Ä–æ—Å–µ—Ç–∏!',
                 reply_markup=markup)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥
@bot.message_handler(content_types=['text'])
def send_news(message):
    if message.text == "–ü–æ–ª–∏—Ç–∏–∫–∞":
        news = parse_news_politic()
        bot.send_message(message.chat.id, news, parse_mode='HTML')
    elif message.text == "–≠–∫–æ–Ω–æ–º–∏–∫–∞":
        news = parse_news_economy()
        bot.send_message(message.chat.id, news, parse_mode='HTML')
    elif message.text == "–ù–∞—É–∫–∞":
        news = parse_news_science()
        bot.send_message(message.chat.id, news, parse_mode='HTML')
    elif message.text == "–ö—É–ª—å—Ç—É—Ä–∞":
        news = parse_news_culture()
        bot.send_message(message.chat.id, news, parse_mode='HTML')
    elif message.text == "–ú–∏—Ä–æ–≤—ã–µ":
        news = parse_news_mir()
        bot.send_message(message.chat.id, news, parse_mode='HTML')
    elif message.text == "–û–±—â–µ—Å—Ç–≤–æ":
        news = parse_news_society()
        bot.send_message(message.chat.id, news, parse_mode='HTML')
    elif message.text == "‚≠ê–ü–æ–ª–µ–∑–Ω–æ–µ":
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton("üì±–ù–µ–π—Ä–æ—Å–µ—Ç–∏")
        btn3 = types.KeyboardButton("‚Ü©–ù–∞–∑–∞–¥")
        markup.add(btn1, btn3)
        bot.send_message(message.chat.id,
                         '–í—ã –ø–µ—Ä–µ—à–ª–∏ –≤–æ –≤–∫–ª–∞–¥–∫—É –ü–æ–ª–µ–∑–Ω–æ–µ, –≤—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—É—é –í–∞–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é.',
                         reply_markup=markup)
    elif message.text == "üì±–ù–µ–π—Ä–æ—Å–µ—Ç–∏":
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton("Text")
        btn2 = types.KeyboardButton("Design")
        btn3 = types.KeyboardButton("Video")
        btn4 = types.KeyboardButton("Content")
        btn5 = types.KeyboardButton("Productivity")
        btn6 = types.KeyboardButton("Business")
        btn7 = types.KeyboardButton("Presentations")
        btn8 = types.KeyboardButton("Research")
        btn9 = types.KeyboardButton("‚Ü©–ù–∞–∑–∞–¥")
        image = open('image/neiron.jpg', "rb")
        markup.add(btn1, btn2, btn3, btn4, btn5, btn6, btn7, btn8, btn9)
        bot.send_photo(message.chat.id, image)
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –Ω–µ–π—Ä–æ—Å–µ—Ç–µ–π, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –Ω—É–∂–Ω—ã–µ —Å—Å—ã–ª–∫–∏", reply_markup=markup)
    elif message.text == "‚Ü©–ù–∞–∑–∞–¥":
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton("–ü–æ–ª–∏—Ç–∏–∫–∞")
        btn2 = types.KeyboardButton("–≠–∫–æ–Ω–æ–º–∏–∫–∞")
        btn3 = types.KeyboardButton("–ù–∞—É–∫–∞")
        btn5 = types.KeyboardButton("–ö—É–ª—å—Ç—É—Ä–∞")
        btn6 = types.KeyboardButton("–ú–∏—Ä–æ–≤—ã–µ")
        btn7 = types.KeyboardButton("–û–±—â–µ—Å—Ç–≤–æ")
        btn8 = types.KeyboardButton("‚≠ê–ü–æ–ª–µ–∑–Ω–æ–µ")
        markup.add(btn1, btn2, btn3, btn5, btn6, btn7, btn8)
        bot.send_message(message.chat.id, "‚Ü©–ù–∞–∑–∞–¥", reply_markup=markup)
    elif message.text == "Text":
        text = send_text_neiron()
        bot.send_message(message.chat.id, text)
    elif message.text == "Design":
        design = send_design_neiron()
        bot.send_message(message.chat.id, design)
    elif message.text == "Video":
        video = send_video_neiron()
        bot.send_message(message.chat.id, video)
    elif message.text == "Content":
        content = send_content_neiron()
        bot.send_message(message.chat.id, content)
    elif message.text == "Productivity":
        productivity = send_productivity_neiron()
        bot.send_message(message.chat.id, productivity)
    elif message.text == "Business":
        business = send_business_neiron()
        bot.send_message(message.chat.id, business)
    elif message.text == "Presentations":
        presentations = send_presentations_neiron()
        bot.send_message(message.chat.id, presentations)
    elif message.text == "Research":
        research = send_research_neiron()
        bot.send_message(message.chat.id, research)


# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.polling(none_stop=True)
